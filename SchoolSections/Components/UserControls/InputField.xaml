<UserControl x:Class="SchoolSections.Components.UserControls.InputField"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SchoolSections.Components.UserControls"
             mc:Ignorable="d"
             d:DesignWidth="200" d:DesignHeight="75"
             x:Name="InputFieldRoot"
             Loaded="OnLoaded">

    <UserControl.Resources>
        <local:ValidationColorConverter x:Key="ValidationColorConverter"/>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter Property="Opacity" TargetName="Border" Value="0.7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock x:Name="LabelComponent"
                   Grid.Row="0"
                   Text="{Binding ElementName=InputFieldRoot, Path=Label, UpdateSourceTrigger=PropertyChanged}"
                   FontSize="{Binding ElementName=InputFieldRoot, Path=LabelFontSize, UpdateSourceTrigger=PropertyChanged}"
                   FontWeight="{Binding ElementName=InputFieldRoot, Path=LabelFontWeight, UpdateSourceTrigger=PropertyChanged}"
                   FontFamily="{Binding ElementName=InputFieldRoot, Path=FontFamily, UpdateSourceTrigger=PropertyChanged}"
                   Foreground="{Binding ElementName=InputFieldRoot, Path=LabelForeground, UpdateSourceTrigger=PropertyChanged}"
                   Background="Transparent"/>
        <TextBox x:Name="TextComponent"
                 Grid.Row="1"
                 Text="{Binding ElementName=InputFieldRoot, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 FontSize="{Binding ElementName=InputFieldRoot, Path=FontSize, UpdateSourceTrigger=PropertyChanged}"
                 FontWeight="{Binding ElementName=InputFieldRoot, Path=FontWeight, UpdateSourceTrigger=PropertyChanged}"
                 FontFamily="{Binding ElementName=InputFieldRoot, Path=FontFamily, UpdateSourceTrigger=PropertyChanged}"
                 Foreground="{Binding ElementName=InputFieldRoot, Path=Foreground, UpdateSourceTrigger=PropertyChanged}"
                 SelectionBrush="WhiteSmoke"
                 BorderThickness="0 0 0 1"
                 BorderBrush="{Binding ElementName=InputFieldRoot, Path=IsValid, Converter={StaticResource ValidationColorConverter}, UpdateSourceTrigger=PropertyChanged}"
                 IsReadOnly="{Binding ElementName=InputFieldRoot, Path=IsReadOnly, UpdateSourceTrigger=PropertyChanged}"
                 Background="Transparent"
                 TextChanged="OnTextChanged"
                 LostFocus="OnTextChangingEnded">
            <TextBox.CaretBrush>
                <SolidColorBrush Color="{Binding ElementName=InputFieldRoot, Path=CaretColor}"/>
            </TextBox.CaretBrush>
        </TextBox>
        <TextBlock x:Name="PlaceholderComponent"
                   Grid.Row="1"
                   Text="{Binding ElementName=InputFieldRoot, Path=Placeholder, UpdateSourceTrigger=PropertyChanged}"
                   FontSize="{Binding ElementName=InputFieldRoot, Path=FontSize, UpdateSourceTrigger=PropertyChanged}"
                   FontWeight="{Binding ElementName=InputFieldRoot, Path=FontWeight, UpdateSourceTrigger=PropertyChanged}"
                   FontFamily="{Binding ElementName=InputFieldRoot, Path=FontFamily, UpdateSourceTrigger=PropertyChanged}"
                   Foreground="{Binding ElementName=InputFieldRoot, Path=Foreground, UpdateSourceTrigger=PropertyChanged}"
                   IsHitTestVisible="False"
                   Background="Transparent">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Collapsed"/>

                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=TextComponent, Path=Text}" Value=""/>
                                <Condition Binding="{Binding ElementName=TextComponent, Path=IsFocused}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <Popup IsOpen="{Binding ElementName=InputFieldRoot, Path=IsErrorOpen, UpdateSourceTrigger=PropertyChanged}"
               StaysOpen="False"
               PlacementTarget="{Binding ElementName=InputFieldRoot}" Placement="Bottom"
               VerticalOffset="10" HorizontalOffset="{Binding ElementName=InputFieldRoot, Path=Margin.Left}"
               Name="ErrorBox">
            <StackPanel Orientation="Horizontal"
                        Background="{StaticResource VeryDarkBlueBackground}"
                        Margin="10">
                <fa:ImageAwesome Icon="Warning"
                                 Foreground="{StaticResource IncorrectInputSolidBrush}"
                                 Width="20" Height="20"
                                 Margin="0 0 5 0"/>
                <TextBlock x:Name="ErrorMessageComponent"
                           Text="{Binding ElementName=InputFieldRoot, Path=ErrorMessage, UpdateSourceTrigger=PropertyChanged}"
                           Foreground="{StaticResource GrayBackground}" Background="Transparent"
                           VerticalAlignment="Center"
                           TextWrapping="Wrap"
                           MaxWidth="{Binding ElementName=TextComponent, Path=ActualWidth}"/>
            </StackPanel>
        </Popup>
    </Grid>
</UserControl>
